----1 sys에서 사용자 만들고 권한주기----
CREATE USER medipaw IDENTIFIED BY 1111; 
GRANT RESOURCE, CREATE SESSION TO medipaw;
GRANT CREATE VIEW TO medipaw;
GRANT CREATE TRIGGER TO medipaw;

--- medipaw에서 테이블/뷰/트리거 생성 ---
-- member staff 먼저 생성 후 animalhosp_main csv import하기
-- table create

-- 각자 완성된 쿼리문만 넣기
-- 순서 맞춰서 잘 넣어주세염

  CREATE TABLE "MEDIPAW"."BOONYANG" 
   (	"BYNO" NUMBER, 
	"STATE" VARCHAR2(20 BYTE) DEFAULT '분양중', 
	"KIND" VARCHAR2(50 BYTE), 
	"GENDER" VARCHAR2(20 BYTE), 
	"AGE" NUMBER, 
	"TITLE" VARCHAR2(100 BYTE), 
	"CONTENT" VARCHAR2(500 BYTE), 
	"REGDATE" DATE DEFAULT SYSDATE, 
	"REPLYCNT" NUMBER DEFAULT 0, 
	"ID" VARCHAR2(50 BYTE), 
	"BYIMG" VARCHAR2(200 BYTE)
   ) ;

  CREATE TABLE "MEDIPAW"."BY_ATTACH" 
   (	"BYNO" NUMBER, 
	"UUID" VARCHAR2(100 BYTE), 
	"UPFOLDER" VARCHAR2(200 BYTE), 
	"FILENAME" VARCHAR2(100 BYTE)
   ) ;

 CREATE TABLE "MEDIPAW"."BY_REPLY" 
   (	"BYRNO" NUMBER, 
	"REPLY" VARCHAR2(400 BYTE), 
	"REGDATE" DATE DEFAULT SYSDATE, 
	"BYNO" NUMBER, 
	"ID" VARCHAR2(50 BYTE)
   ) ;


  CREATE TABLE "MEDIPAW"."REVIEW" 
   (	"RNO" NUMBER, 
	"REGDATE" DATE DEFAULT SYSDATE, 
	"STAR" NUMBER, 
	"TITLE" VARCHAR2(50 BYTE), 
	"CONTENT" VARCHAR2(400 BYTE), 
	"ANIMALHOSP_NO" NUMBER, 
	"ID" VARCHAR2(50 BYTE), 
	"TNO" NUMBER
   ) ;

  CREATE TABLE "MEDIPAW"."STAFF" 
   (	"SID" VARCHAR2(50 BYTE), 
	"SPW" VARCHAR2(100 BYTE), 
	"SNAME" VARCHAR2(50 BYTE), 
	"SPHONE" VARCHAR2(50 BYTE), 
	"SEMAIL" VARCHAR2(50 BYTE), 
	"COMPANYNUM" VARCHAR2(50 BYTE), 
	"REGDATE" DATE DEFAULT SYSDATE, 
	"ENABLED" CHAR(1 BYTE) DEFAULT 1, 
	"IMG" VARCHAR2(100 BYTE)
   ) ;

  CREATE TABLE "MEDIPAW"."STAFF_AUTH" 
   (	"SID" VARCHAR2(50 BYTE), 
	"AUTH" VARCHAR2(50 BYTE) DEFAULT NULL
   ) ;

 ALTER TABLE "MEDIPAW"."BOONYANG" ADD CONSTRAINT "PK_BOONYANG" PRIMARY KEY ("BYNO") ENABLE;
  ALTER TABLE "MEDIPAW"."BOONYANG" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "MEDIPAW"."BOONYANG" MODIFY ("REPLYCNT" NOT NULL ENABLE);
  ALTER TABLE "MEDIPAW"."BOONYANG" MODIFY ("REGDATE" NOT NULL ENABLE);
  ALTER TABLE "MEDIPAW"."BOONYANG" MODIFY ("CONTENT" NOT NULL ENABLE);
  ALTER TABLE "MEDIPAW"."BOONYANG" MODIFY ("TITLE" NOT NULL ENABLE);
  ALTER TABLE "MEDIPAW"."BOONYANG" MODIFY ("AGE" NOT NULL ENABLE);
  ALTER TABLE "MEDIPAW"."BOONYANG" MODIFY ("GENDER" NOT NULL ENABLE);
  ALTER TABLE "MEDIPAW"."BOONYANG" MODIFY ("KIND" NOT NULL ENABLE);
  ALTER TABLE "MEDIPAW"."BOONYANG" MODIFY ("STATE" NOT NULL ENABLE);
  ALTER TABLE "MEDIPAW"."BOONYANG" MODIFY ("BYNO" NOT NULL ENABLE);

  ALTER TABLE "MEDIPAW"."BY_ATTACH" MODIFY ("FILENAME" NOT NULL ENABLE);
  ALTER TABLE "MEDIPAW"."BY_ATTACH" MODIFY ("UPFOLDER" NOT NULL ENABLE);
  ALTER TABLE "MEDIPAW"."BY_ATTACH" MODIFY ("UUID" NOT NULL ENABLE);
  ALTER TABLE "MEDIPAW"."BY_ATTACH" MODIFY ("BYNO" NOT NULL ENABLE);

  ALTER TABLE "MEDIPAW"."BY_REPLY" ADD CONSTRAINT "PK_BY_REPLY" PRIMARY KEY ("BYRNO") ENABLE;
  ALTER TABLE "MEDIPAW"."BY_REPLY" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "MEDIPAW"."BY_REPLY" MODIFY ("BYNO" NOT NULL ENABLE);
  ALTER TABLE "MEDIPAW"."BY_REPLY" MODIFY ("REGDATE" NOT NULL ENABLE);
  ALTER TABLE "MEDIPAW"."BY_REPLY" MODIFY ("REPLY" NOT NULL ENABLE);
  ALTER TABLE "MEDIPAW"."BY_REPLY" MODIFY ("BYRNO" NOT NULL ENABLE);


  ALTER TABLE "MEDIPAW"."REVIEW" MODIFY ("TNO" NOT NULL ENABLE);
  ALTER TABLE "MEDIPAW"."REVIEW" ADD CONSTRAINT "PK_REVIEW" PRIMARY KEY ("RNO") ENABLE;
  ALTER TABLE "MEDIPAW"."REVIEW" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "MEDIPAW"."REVIEW" MODIFY ("ANIMALHOSP_NO" NOT NULL ENABLE);
  ALTER TABLE "MEDIPAW"."REVIEW" MODIFY ("CONTENT" NOT NULL ENABLE);
  ALTER TABLE "MEDIPAW"."REVIEW" MODIFY ("TITLE" NOT NULL ENABLE);
  ALTER TABLE "MEDIPAW"."REVIEW" MODIFY ("STAR" NOT NULL ENABLE);
  ALTER TABLE "MEDIPAW"."REVIEW" MODIFY ("REGDATE" NOT NULL ENABLE);
  ALTER TABLE "MEDIPAW"."REVIEW" MODIFY ("RNO" NOT NULL ENABLE);

  ALTER TABLE "MEDIPAW"."STAFF" ADD CONSTRAINT "PK_STAFF" PRIMARY KEY ("SID") ENABLE;
  ALTER TABLE "MEDIPAW"."STAFF" MODIFY ("IMG" NOT NULL ENABLE);
  ALTER TABLE "MEDIPAW"."STAFF" MODIFY ("ENABLED" NOT NULL ENABLE);
  ALTER TABLE "MEDIPAW"."STAFF" MODIFY ("REGDATE" NOT NULL ENABLE);
  ALTER TABLE "MEDIPAW"."STAFF" MODIFY ("COMPANYNUM" NOT NULL ENABLE);
  ALTER TABLE "MEDIPAW"."STAFF" MODIFY ("SEMAIL" NOT NULL ENABLE);
  ALTER TABLE "MEDIPAW"."STAFF" MODIFY ("SPHONE" NOT NULL ENABLE);
  ALTER TABLE "MEDIPAW"."STAFF" MODIFY ("SNAME" NOT NULL ENABLE);
  ALTER TABLE "MEDIPAW"."STAFF" MODIFY ("SPW" NOT NULL ENABLE);
  ALTER TABLE "MEDIPAW"."STAFF" MODIFY ("SID" NOT NULL ENABLE);

  ALTER TABLE "MEDIPAW"."STAFF_AUTH" MODIFY ("AUTH" NOT NULL ENABLE);
  ALTER TABLE "MEDIPAW"."STAFF_AUTH" MODIFY ("SID" NOT NULL ENABLE);

  ALTER TABLE "MEDIPAW"."BOONYANG" ADD CONSTRAINT "FK_BOONYANG_MEMBER" FOREIGN KEY ("ID")
	  REFERENCES "MEDIPAW"."MEMBER" ("ID") ON DELETE CASCADE ENABLE;
 ALTER TABLE "MEDIPAW"."BY_REPLY" ADD CONSTRAINT "FK_BY_REPLY_MEMBER" FOREIGN KEY ("ID")
	  REFERENCES "MEDIPAW"."MEMBER" ("ID") ON DELETE CASCADE ENABLE;
  ALTER TABLE "MEDIPAW"."REVIEW" ADD CONSTRAINT "FK_REVIEW_MEMBER" FOREIGN KEY ("ID")
	  REFERENCES "MEDIPAW"."MEMBER" ("ID") ON DELETE CASCADE ENABLE;



-- fk 지정 쿼리문 붙어있어서 맨 마지막에 create하기
CREATE TABLE SILJONG (
SJNO   NUMBER   CONSTRAINT PK_SILJONG PRIMARY KEY,
SJSTATE   VARCHAR2(50)   NOT NULL,
SJTITLE   VARCHAR2(200)   NOT NULL,
SJCONTENT   VARCHAR2(1000)   NOT NULL,
ID   VARCHAR2(50)   NOT NULL,
SJREGDATE   DATE   NOT NULL,
SJHIT   NUMBER   DEFAULT 0,
SJREPLYCNT   NUMBER   DEFAULT 0,
CONSTRAINT FK_SILJONG_MEMBER FOREIGN KEY (ID) REFERENCES MEMBER(ID) ON DELETE CASCADE
);

CREATE TABLE SJ_REPLY (
SJRNO   NUMBER   CONSTRAINT PK_SJ_REPLY PRIMARY KEY,
SJREPLY   VARCHAR(1000)   NOT NULL,
ID   VARCHAR(50)   NOT NULL,
SJRREGDATE   DATE   NOT NULL,
SJNO   NUMBER   NOT NULL,
CONSTRAINT FK_SJ_REPLY_SILJONG FOREIGN KEY (SJNO) REFERENCES SILJONG(SJNO) ON DELETE CASCADE,
CONSTRAINT FK_SJ_REPLY_MEMBER FOREIGN KEY (ID) REFERENCES MEMBER(ID) ON DELETE CASCADE
);

CREATE TABLE SJ_ATTACH (
UUID   VARCHAR2(100)   CONSTRAINT PK_SJ_ATTACH PRIMARY KEY,
UPFOLDER   VARCHAR2(200)   NOT NULL,
FILENAME   VARCHAR2(100)   NOT NULL,
SJNO   NUMBER   NOT NULL,
CONSTRAINT FK_SJ_ATTACH_SILJONG FOREIGN KEY (SJNO) REFERENCES SILJONG(SJNO)
);

CREATE TABLE RESERV (
RVNO   NUMBER   CONSTRAINT PK_RESERV PRIMARY KEY,
RVDATE   VARCHAR2(50)   NOT NULL,
RVTIME   VARCHAR2(50)   NOT NULL,
PETNAME   VARCHAR2(50)   NOT NULL,
PETSPECIES   VARCHAR2(50)   NOT NULL,
PETGENDER   VARCHAR2(50)   NOT NULL,
PETNOTE   VARCHAR2(1000)   NULL,
ANIMALHOSP_NO   NUMBER   NOT NULL,
ID   VARCHAR2(50)   NOT NULL,
CONSTRAINT FK_RESERV_ANIMALHOSP FOREIGN KEY (ANIMALHOSP_NO) REFERENCES ANIMALHOSP_MAIN(ANIMALHOSP_NO) ON DELETE CASCADE,
CONSTRAINT FK_RESERV_MEMBER FOREIGN KEY (ID) REFERENCES MEMBER(ID) ON DELETE CASCADE
);

CREATE TABLE TREAT (
TNO   NUMBER   CONSTRAINT PK_TREAT PRIMARY KEY,
TRDATE   VARCHAR2(50)   NOT NULL,
TRTIME   VARCHAR2(50)   NOT NULL,
TRNOTE   VARCHAR2(1000)   NOT NULL,
ANIMALHOSP_NO   NUMBER   NOT NULL,
RVNO   NUMBER   ,
DELCHECK CHAR(1) DEFAULT 0,
ID   VARCHAR2(50)   NOT NULL,
SID VARCHAR2(50) NOT NULL,
CONSTRAINT FK_TREAT_ANIMALHOSP FOREIGN KEY (ANIMALHOSP_NO) REFERENCES ANIMALHOSP_MAIN(ANIMALHOSP_NO) ON DELETE CASCADE,
CONSTRAINT FK_TREAT_RESERV FOREIGN KEY (RVNO) REFERENCES RESERV(RVNO) ON DELETE SET NULL,
CONSTRAINT FK_TREAT_MEMBER FOREIGN KEY (ID) REFERENCES MEMBER(ID) ON DELETE CASCADE,
CONSTRAINT FK_TREAT_STAFF FOREIGN KEY (SID) REFERENCES STAFF(SID) ON DELETE CASCADE
);

CREATE TABLE MARK (
MNO   NUMBER   CONSTRAINT PK_MARK PRIMARY KEY,
ID   VARCHAR2(50)   NOT NULL,
ANIMALHOSP_NO   NUMBER   NOT NULL,
CONSTRAINT FK_MARK_ANIMALHOSP FOREIGN KEY (ANIMALHOSP_NO) REFERENCES ANIMALHOSP_MAIN(ANIMALHOSP_NO) ON DELETE CASCADE,
CONSTRAINT FK_MARK_MEMBER FOREIGN KEY (ID) REFERENCES MEMBER(ID) ON DELETE CASCADE
);




-- view create
CREATE OR REPLACE VIEW view_reserv_adm AS     -- 뷰 생성
SELECT A.ANIMALHOSP_NAME AS HOSNAME,
       A.HSOP_ROADNAME_ADDRESS AS HOSADDRESS,
       A.HSOP_PHONENUM AS HOSPHONE,
       M.NAME AS NAME,
       R.RVDATE AS RVDATE,
       R.RVTIME AS RVTIME,
       R.RVNO AS RVNO
  FROM ANIMALHOSP_MAIN A
       INNER JOIN RESERV R ON A.ANIMALHOSP_NO = R.ANIMALHOSP_NO
       INNER JOIN MEMBER M ON R.ID = M.ID
  ORDER BY RVDATE DESC, RVTIME DESC ;

CREATE OR REPLACE VIEW view_treat_adm AS     -- 뷰 생성
SELECT A.ANIMALHOSP_NAME AS animalhosp_name,
       A.HSOP_ROADNAME_ADDRESS AS hsop_roadname_address,
       A.HSOP_PHONENUM AS hsop_phonenum,
       M.NAME AS NAME,
       T.TRDATE AS TRDATE,
       T.TRTIME AS TRTIME,
       T.RVNO AS RVNO,
       T.TNO AS TNO
  FROM ANIMALHOSP_MAIN A
       INNER JOIN TREAT T ON A.ANIMALHOSP_NO = T.ANIMALHOSP_NO
       INNER JOIN MEMBER M ON T.ID = M.ID
  ORDER BY TRDATE DESC, TRTIME DESC;


-- trigger create
  CREATE OR REPLACE TRIGGER "MEDIPAW"."ADD_STAFF_AUTH" 
AFTER INSERT ON staff
FOR EACH ROW
BEGIN
    INSERT INTO staff_auth (sid, auth) VALUES (:NEW.sid, 'ROLE_STAFF');
END;

  CREATE OR REPLACE TRIGGER "MEDIPAW"."REMOVE_STAFF_AUTH" 
AFTER DELETE ON staff
FOR EACH ROW
BEGIN
    DELETE FROM staff_auth WHERE sid = :OLD.sid;
END;

  CREATE OR REPLACE TRIGGER "MEDIPAW"."TRIGGER_REVIEW" 
AFTER INSERT
ON review
FOR EACH ROW
BEGIN
    UPDATE animalhosp_main SET rv_cnt = rv_cnt + 1 WHERE animalhosp_no = :NEW.animalhosp_no;
    UPDATE animalhosp_main SET star_total = star_total + :NEW.star WHERE animalhosp_no = :NEW.animalhosp_no;
END;

  CREATE OR REPLACE TRIGGER "MEDIPAW"."TRIGGER_REVIEW_DELETE" 
AFTER DELETE ON review
FOR EACH ROW
BEGIN
    UPDATE animalhosp_main SET rv_cnt = rv_cnt - 1, star_total = star_total - :OLD.star WHERE animalhosp_no = :OLD.animalhosp_no;
END;

  CREATE OR REPLACE TRIGGER "MEDIPAW"."TRIGGER_REVIEW_UPDATE" 
AFTER UPDATE ON review
FOR EACH ROW
BEGIN
    UPDATE animalhosp_main SET star_total = star_total - :OLD.star + :NEW.star WHERE animalhosp_no = :OLD.animalhosp_no;
END;



-- index create
CREATE INDEX idx_reserv ON reserv(rvno DESC);       
CREATE INDEX idx_sjreply ON SJ_REPLY(sjno DESC, sjrno ASC);
CREATE INDEX "MEDIPAW"."IDX_NAME_ID" ON "MEDIPAW"."STAFF" ("SNAME", "SID");



--seq create
CREATE SEQUENCE SILJONG_SEQ NOCACHE;
CREATE SEQUENCE SJ_REPLY_SEQ NOCACHE;
CREATE SEQUENCE MARK_SEQ NOCACHE;
CREATE SEQUENCE RESERV_SEQ NOCACHE;
CREATE SEQUENCE TREAT_SEQ NOCACHE;


CREATE SEQUENCE  "MEDIPAW"."BYNO_SEQ"  MINVALUE 1 MAXVALUE 999999999 INCREMENT BY 1 START WITH 101 CACHE 20 NOORDER  CYCLE ;
CREATE SEQUENCE  "MEDIPAW"."BYRNO_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 31 NOCACHE  NOORDER  NOCYCLE ;
CREATE SEQUENCE  "MEDIPAW"."RNO_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 34 NOCACHE  NOORDER  NOCYCLE ;


